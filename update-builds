#!/bin/zsh

# Repo details.
#
repo=https://github.com/ianmacd/MagiskBuilds
branch=private

# Files to commit.
#
zip=$( ls Magisk-v* | tail -n 1 )
app=$( ls MagiskManager-v* | tail -n 1 )
stub_app=stub-release.apk
unin=$( ls Magisk-uninstaller-v* | tail -n 1 )
snet=snet.apk
json=updates/ianmacd.json
note=notes.md
build_dir=~/src/Magisk

# Strings needed for JSON.
#
zip_v=${${zip#*-v}%.zip}
app_v=${${app#*-v}%.apk}
vcode=${${zip_v#*-}%-ianmacd}
md5=$( md5sum $zip | cut -d' ' -f 1 )
snet_v=$( sed -rne 's/^.*versionCode ([0-9]+).*$/\1/p' $build_dir/snet/build.gradle )
#stub_v=$( sed -rne 's/^.*int\s+STUB_VERSION\s+=\s+([0-9]+).*$/\1/p' $build_dir/shared/src/main/java/com/topjohnwu/magisk/DynAPK.java )
#stub_v=$( sed -rne 's/^.*int\s+STUB_VERSION\s+=\s+([0-9]+).*$/\1/p' $build_dir/stub/src/main/java/com/topjohnwu/magisk/obfuscate/Mapping.java )
stub_v=$( wget -qO - https://raw.githubusercontent.com/topjohnwu/magisk_files/canary/release.json | sed -rne '/"stub":/{N;s/^.+([0-9]+).+$/\1/p}' )

if [ "$1" = -d ]; then
  echo $zip
  echo $zip_v
  echo $app
  echo $app_v
  echo $unin
  echo $md5
  echo $vcode
  shift
fi

[ "$1" = --testing ] && branch=testing
[ "$1" = --master ] && branch=master
[ "$1" = --private ] && branch=private

git checkout $branch

if [ $branch = master ]; then
  git merge -m "Merge branch 'testing' for $vcode." testing
fi

cat >$json <<EOF
{
  "app": {
    "version": "$app_v",
    "versionCode": "$vcode",
    "link": "$repo/raw/$branch/$app",
    "note": "$repo/raw/$branch/$note"
  },
  "magisk": {
    "version": "$zip_v",
    "versionCode": "$vcode",
    "link": "$repo/raw/$branch/$zip",
    "note": "$repo/raw/$branch/$note",
    "md5": "$md5"
  },
  "uninstaller": {
    "link": "$repo/raw/$branch/$unin"
  },
  "stub": {
    "versionCode": "$stub_v",
    "link": "$repo/raw/$branch/$stub_app"
  }
}
EOF

cp -p $build_dir/app/src/main/res/raw/notes.md . 
git add $zip $app $stub_app $unin $snet $json $note
echo

if [ $branch = master ]; then
  cmd='git merge --continue && git push'
  echo Conflicts auto-resolved.
else
  cmd='git commit -am "Update '$branch' build to '$zip_v/$app_v'" && git push'
  #echo Now run: 'git commit -am "Update '$branch' build to '$zip_v/$app_v'" && git push'
fi

echo Now run: $cmd
echo -n 'Run that now? (y/n) '
read -q i
echo
[ $i = y ] && eval $cmd
